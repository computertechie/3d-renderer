buildscript {
    repositories {
        mavenCentral()
    }
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'application'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

group = 'link.snowcat'
version = '0.1'
archivesBaseName = '3d_renderer'
mainClassName = 'link.snowcat.cubes.Cubes'

compileJava {
    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.l33tlabs.twl:pngdecoder:1.0"
    compile "org.lwjgl.lwjgl:lwjgl:${version_lwjgl}"
    compile "org.lwjgl.lwjgl:lwjgl_util:${version_lwjgl}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.1'
}

def commonManifest = {
    attributes 'Main-Class': 'link.snowcat.cubes.Cubes', 'Class-Path': 'natives'
}
def platforms = ['windows', 'linux', 'osx']

platforms.each { platform ->
    task "${platform}Natives" {
        def outputDir = "$buildDir/natives/$platform"
        inputs.files(configurations.compile)
        outputs.dir(outputDir)
        doLast {
            copy {
                def artifacts = configurations.compile.resolvedConfiguration.resolvedArtifacts
                        .findAll { it.classifier == "natives-$platform" }
                artifacts.each {
                    from zipTree(it.file)
                }
                into outputDir
            }
        }
    }

    task "${platform}FatJar"(type: Jar) {
        classifier = "${platform}-fat"
        manifest commonManifest

        into('natives'){
            from("${buildDir}/natives/${platform}")
        }
        from {
            configurations.compile.filter({ !(it.name =~ /.*-natives-.*\.jar/) }).collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }

        with jar
    }
}

task natives {
    dependsOn platforms.collect { "${it}Natives" }.findAll { tasks[it] }
}

jar {
    dependsOn natives
    classifier = 'bin'
    manifest commonManifest
}

build.dependsOn platforms.collect { "${it}FatJar" }.findAll { tasks[it] }




